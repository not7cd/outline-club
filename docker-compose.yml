---
version: '3.4'

services:
  club-postgres:
    image: postgres:13-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - database:/var/lib/postgresql/data
      - ./scripts/postgres:/docker-entrypoint-initdb.d:ro
    env_file:
      - ./env/authentik
    environment:
      - POSTGRES_USERS=authentik:${PG_PASS_AUTHENTIK:?database password for authentik required}|outline:${PG_PASS_OUTLINE:?database password for outline required}
      - POSTGRES_DATABASES=authentik:authentik|outline:outline
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=${PG_PASS:?database password required}
    networks:
      - club-network
  club-redis:
    image: redis:alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    networks:
      - club-network
  club-authentik-server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.6.2}
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: club-redis
      AUTHENTIK_POSTGRESQL__HOST: club-postgres
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS_AUTHENTIK}
      # AUTHENTIK_ERROR_REPORTING__ENABLED: "true"
      # WORKERS: 2
    volumes:
      - ./media:/media
      - ./custom-templates:/templates
      - geoip:/geoip
    env_file:
      - ./env/authentik
    ports:
      - "0.0.0.0:${AUTHENTIK_PORT_HTTP:-9000}:9000"
      - "0.0.0.0:${AUTHENTIK_PORT_HTTPS:-9443}:9443"
    networks:
      - club-network
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.club-authentik.rule=Host(`${AUTHENTIK_URL:?}`)"
      - "traefik.http.routers.club-authentik.entrypoints=websecure"
      - "traefik.http.routers.club-authentik.tls=true"
      - "traefik.http.routers.club-authentik.tls.certresolver=le"
  club-authentik-worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.6.2}
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: club-redis
      AUTHENTIK_POSTGRESQL__HOST: club-postgres
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS_AUTHENTIK}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY:?authentik secret key required}
      # AUTHENTIK_ERROR_REPORTING__ENABLED: "true"
    # This is optional, and can be removed. If you remove this, the following will happen
    # - The permissions for the /media folders aren't fixed, so make sure they are 1000:1000
    # - The docker socket can't be accessed anymore
    user: root
    volumes:
      - ./media:/media
      - ./certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock
      - ./custom-templates:/templates
      - geoip:/geoip
    env_file:
      - ./env/authentik
    networks:
      - club-network
  club-minio:
    image: minio/minio:latest
    volumes:
      - ./data/minio_root:/minio_root:z
      - ./data/certs:/root/.minio/certs:z
    command: "minio server /minio_root"
    env_file:
      - ./env/minio
    restart: always
    networks:
      - club-network
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.club-minio.rule=Host(`${MINIO_URL:?}`)"
      - "traefik.http.routers.club-minio.entrypoints=websecure"
      - "traefik.http.routers.club-minio.tls=true"
      - "traefik.http.routers.club-minio.tls.certresolver=le"
  club-script-createbuckets:
    image: minio/mc
    depends_on:
      - club-minio
    env_file:
      - ./env/minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://club-minio:9000 ${MINIO_ACCESS_KEY:?} ${MINIO_SECRET_KEY:?}) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/outline-bucket;
      /usr/bin/mc policy set download minio/outline-bucket;
      exit 0;
      "
    networks:
      - club-network
  club-outline:
    image: outlinewiki/outline:latest
    command: sh -c "yarn sequelize:migrate --env production-ssl-disabled && yarn start"
    environment:
      - DATABASE_URL=postgres://outline:${PG_PASS_OUTLINE}@club-postgres:5432/outline
      - DATABASE_URL_TEST=postgres://outline:${PG_PASS_OUTLINE}@club-postgres:5432/outline-test
      - REDIS_URL=redis://club-redis:6379
      - AWS_S3_UPLOAD_BUCKET_NAME=outline-bucket
      - URL=https://${OUTLINE_URL:?}
    env_file:
      - ./env/outline
      - ./env/oidc
    restart: always
    depends_on:
      - club-postgres
      - club-redis
      - club-minio
    networks:
      - club-network
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.club-outline.rule=Host(`${OUTLINE_URL:?}`)"
      - "traefik.http.routers.club-outline.entrypoints=websecure"
      - "traefik.http.routers.club-outline.tls=true"
      - "traefik.http.routers.club-outline.tls.certresolver=le"

networks:
  default:
    external:
      name: common-network

  club-network:

volumes:
  database:
    driver: local
  geoip:
    driver: local
